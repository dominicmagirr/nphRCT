set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
devtools::load_all()
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
df_scores<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
t_star = 4
)
plot(df_scores)
df_scores
mean(df_scores$score)
mean(df_scores$df$score)
mean(df_scores$df$score[df_scores$df$group == "control"])
mean(df_scores$df$score[df_scores$df$group == "experimental"])
mean(df_scores$df$standardized_score[df_scores$df$group == "control"])
mean(df_scores$df$standardized_score[df_scores$df$group == "experimental"])
#############################################################################
find_pseudovalues(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 24)
#############################################################################
df_pvs_rmst <- find_pseudovalues(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 24)
plot(df_pvs_rmst)
set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
devtools::load_all()
set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
df_scores<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
t_star = 4
)
plot(df_scores)
library(survival)
library(ggplot2)
plot(df_scores)
mean(df_scores$score)
mean(df_scores$df$standardized_score[df_scores$df$group == "control"])
mean(df_scores$df$standardized_score[df_scores$df$group == "experimental"])
#############################################################################
df_pvs_rmst <- find_pseudovalues(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 24)
plot(df_pvs_rmst)
#############################################################################
df_pvs_rmst <- find_pseudovalues(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 33)
plot(df_pvs_rmst)
sim_data
plot(survfit(Surv(event_time, event_status)~group, data = sim_data))
plot(survfit(Surv(event_time, event_status)~group, data = sim_data), col = 1:2)
plot(survfit(Surv(event_time, event_status)~group, data = sim_data), col = 1:2)
plot(df_pvs_rmst)
devtools::document()
devtools::test()
set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
df_scores_mw<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
t_star = 4
)
df_scores_rmst<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 4
)
df_scores_ms<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="ms",
tau = 4
)
save_png <- function(code, width = 400, height = 400) {
path <- tempfile(fileext = ".png")
png(path, width = width, height = height)
on.exit(dev.off())
code
path
}
expect_snapshot_file(save_png(plot(df_scores_mw)), paste0("plot_mw.png"),cran = TRUE)
View(df_scores)
df_scores_mw <- readRDS("~/r-package-rct-under-anticipated-delayed-effects/tests/testthat/_snaps/find_scores/df_scores_mw.RDS")
df_scores_mw <- readRDS("~/r-package-rct-under-anticipated-delayed-effects/tests/testthat/_snaps/find_scores/df_scores_mw.RDS")
df_scores_ms <- readRDS("~/r-package-rct-under-anticipated-delayed-effects/tests/testthat/_snaps/find_scores/df_scores_ms.RDS")
View(df_scores_ms)
df_scores_rmst <- readRDS("~/r-package-rct-under-anticipated-delayed-effects/tests/testthat/_snaps/find_scores/df_scores_rmst.RDS")
devtools::test()
library(survival)
library(ggplot2)
devtools::test()
?devtools::test
devtools::find_active_file()
devtools::test_active_file()
devtools::test_file()
devtools::test_active_file()
set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
df_scores_mw<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
t_star = 4
)
df_scores_rmst<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 4
)
df_scores_ms<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="ms",
tau = 4
)
plot(df_scores_mw)
save_png(plot(df_scores_mw))
save_png <- function(code, width = 400, height = 400) {
path <- tempfile(fileext = ".png")
png(path, width = width, height = height)
on.exit(dev.off())
code
path
}
save_png(plot(df_scores_mw))
?expect_snapshot_file
expect_snapshot_file(save_png(plot(df_scores_mw)), paste0("plot_mw.png"),cran = TRUE)
devtools::test()
devtools::test()
devtools::test()
devtools::test()
expect_snapshot_file(save_png(plot(df_scores_mw)),"plot_mw.png", cran = TRUE)
snapshot_review()
devtools::load_all()
testthat::test_file("tests/testthat/test-find_scores.R")
testthat::test_file("tests/testthat/test-find_scores.R")
testthat::test_file("tests/testthat/test-find_scores.R")
library(survival)
library(ggplot2)
set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)
),
recruitment_model=list(
rec_model="power",
rec_period = 12,
rec_power = 1
),
n_c=50,
n_e=50,
max_cal_t = 36
)
df_scores<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
t_star = 4
)
plot(df_scores)
mean(df_scores$df$standardized_score[df_scores$df$group == "control"])
mean(df_scores$df$standardized_score[df_scores$df$group == "experimental"])
#############################################################################
df_pvs_rmst <- find_pseudovalues(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 33)
plot(df_pvs_rmst)
df_pvs_rmst
class(df_pvs_rmst)
#############################################################################
df_pvs_rmst <- find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="rmst",
tau = 33)
plot(df_pvs_rmst)
plot(df_scores)
plot(df_pvs_rmst)
mean(df_scores$df$standardized_score[df_scores$df$group == "control"])
mean(df_scores$df$standardized_score[df_scores$df$group == "experimental"])
mean(df_pvs_rmst$df$standardized_score[df_pvs_rmst$df$group == "control"])
mean(df_pvs_rmst$df$standardized_score[df_pvs_rmst$df$group == "experimental"])
plot(survfit(Surv(event_time, event_status)~group, data = sim_data), col = 1:2)
devtools::check()
library(survival)
?usethis::use_data
moderate_cross <- read.csv("~/NPH/jama_onc_letter/moderate_cross.csv")
usethis::use_data(moderate_cross)
?data
rm(list = ls())
devtools::load_all()
data("moderate_cross")
knitr::opts_chunk$set(echo = TRUE)
dat <- moderate_cross
km <- survfit(Surv(time, event) ~ arm,
data = dat)
p_km <- survminer::ggsurvplot(km,
data = dat,
risk.table = TRUE,
break.x.by = 6,
legend.title = "",
xlab = "Time (months)",
ylab = "Overall survival",
risk.table.fontsize = 4,
legend = c(0.8,0.8))
p_lrt <- plot(df_lr,title="Log rank")
df_lr <- find_scores(formula=Surv(time, event) ~ arm,
data=dat,
method = "lr")
p_lrt <- plot(df_lr,title="Log rank")
library(dplyr)
library(survival)
library(ggplot2)
p_lrt <- plot(df_lr,title="Log rank")
cowplot::plot_grid(p_km[[1]],p_lrt,rel_widths=c(2,3))
df_rmst_pseudo <- find_scores(formula=Surv(time, event) ~ arm,
tau=18,
data=dat,
method = "rmst")
p_rmst <- plot(df_rmst_pseudo, title = "RMST")
cowplot::plot_grid(p_km[[1]],p_rmst,rel_widths=c(2,3))
df_milestone_pseudo <- find_scores(formula=Surv(time, event) ~ arm,
tau=12,
data=dat,
method = "ms")
p_surv <- plot(df_milestone_pseudo, title = "Milestone")
cowplot::plot_grid(p_km[[1]],p_surv,rel_widths=c(2,3))
df_mwlrt <- find_scores(formula=Surv(time, event) ~ arm,
data=dat,
t_star=9,
method = "mw")
p_mwlrt <- plot(df_mwlrt,title="MWLRT")
cowplot::plot_grid(p_km[[1]],p_mwlrt,rel_widths=c(2,3))
cowplot::plot_grid(p_rmst, p_lrt,p_mwlrt,p_surv, nrow = 2)
set.seed(1)
sim_data <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(12 ,24),
lambda_c = log(2)/9,
lambda_e = c(log(2)/9,log(2)/18)),
recruitment_model=list(
rec_model="power",
rec_period=12,
rec_power=1),
n_c=5,
n_e=5,
max_cal_t = 36
)
sim_data
find_at_risk(formula=Surv(event_time,event_status)~group,
data=sim_data,
include_cens=FALSE)
find_weights(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="lr",
include_cens = FALSE)
find_weights(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="fh",
rho = 0,
gamma= 1,
include_cens = FALSE)
find_weights(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
s_star = 0.5,
include_cens = FALSE)
wlrt(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
s_star = 0.5)
df_scores_mw<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="mw",
s_star = 0.5)
plot(df_scores_mw)
df_scores_fh<-find_scores(formula=Surv(event_time,event_status)~group,
data=sim_data,
method="fh",
rho = 0,
gamma=1)
plot(df_scores_fh)
sim_data_0 <- sim_data
sim_data_0$ecog=0
sim_data_1 <- sim_events_delay(
event_model=list(
duration_c = 36,
duration_e = c(6,30),
lambda_c = log(2)/6,
lambda_e = c(log(2)/6,log(2)/12)),
recruitment_model=list(
rec_model="power",
rec_period=12,
rec_power=1),
n_c=5,
n_e=5,
max_cal_t = 36
)
sim_data_1$ecog=1
sim_data_strata<-rbind(sim_data_0,sim_data_1)
wlrt(formula=Surv(event_time,event_status)~group+strata(ecog),
data=sim_data_strata,
method="mw",
t_star = 4
)
devtools::document()
devtools::check()
devtools::check()
View(moderate_cross)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
?qpdf
library(qpdf)
devtools::check()
devtools::check_win_release()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::build()
devtools::load_all()
devtools::test()
devtools::document()
devtools::build()
?rhub::check
getwd()
devtools::check()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::build()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
devtools::document()
devtools::check()
devtools::build()
?wlrt
devtools::load_all()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
devtools::document()
devtools::check()
devtools::build()
devtools::load_all()
test_file("tests/testthat/test-checks.R")
test_file("tests/testthat/test-find-at-risk.R")
test_file("tests/testthat/test-find_at_risk.R")
library(survival)
test_file("tests/testthat/test-find_at_risk.R")
test_file("tests/testthat/test-find_scores.R")
test_file("tests/testthat/test-find_weights.R")
test_file("tests/testthat/test-find_events_delay.R")
test_file("tests/testthat/test-sim_events_delay.R")
test_file("tests/testthat/test-wlrt.R")
devtools::check()
devtools::load_all()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::load_all()
devtools::check()
devtools::build_rmd("vignettes/expl")
devtools::build_rmd("vignettes/explanation.Rmd")
devtools::build_rmd("vignettes/weighted_log_rank_tests.Rmd")
devtools::check()
use_release_issue
use_release_issue()
devtoo;
usethis::use_release_issue()
gh_token_help()
usethis::gh_token_help()
?usethis::use_release_issue()
?usethis::gh_token_help()
usethis::create_github_token()
usethis::use_news_md()
urlchecker::url_check()
devtools::build_readme()
getwd()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check_win_devel()
usethis::use_revdep()
revdepcheck::revdep_check()
# Install package (example mrgsolve)
install.packages("revdepcheck", lib = "Rlibs")
getwd()
# Install package (example mrgsolve)
install.packages("revdepcheck", lib = "~/random/libs")
?devtools::install_github
withr::with_libpaths(new = "~/random/libs/", devtools::install_gitlab("r-lib/revdepcheck"))
withr::with_libpaths(new = "~/random/libs/", devtools::install_github("r-lib/revdepcheck"))
# Install package (example mrgsolve)
install.packages("simNPH", lib = "~/random/libs")
withr::with_libpaths(new = "~/random/libs/", devtools::install_github("cran/simNPH"))
pkgbuild::build(manual = TRUE)
devtools::build()
devtools::check()
